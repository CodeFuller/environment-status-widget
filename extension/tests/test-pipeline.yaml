trigger: none

pool:
  vmImage: ubuntu-latest

parameters:
  - name: Version
    displayName: Deploy Version
    type: string
    values: [ '1.3.0.0040061', '2.7.25.0040128', '3.0.0.0057324-preview' ]
  - name: TargetEnvironment
    displayName: Target Environment
    type: string
    values: [
      # Environment where last deploy of release version was successful.
      'widget-succeeded',
      # Environment where last deploy of preview version was successful.
      'widget-preview',
      # Environment where last deploy of was failed.
      'widget-failed',
      # Environment with no deploys yet.
      'widget-empty'
    ]
  - name: FailBuild
    displayName: Fail Build
    type: boolean
    default: false

stages:
- stage: DeployStage
  displayName: Deploy
  jobs:
  - deployment: DeployJob
    displayName: Deploy
    workspace:
      clean: all
    environment: widget-${{ parameters.TargetEnvironment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - powershell: |
                $buildVersion = '${{ parameters.Version }}'
                Write-Host "##vso[build.updatebuildnumber]${{ parameters.TargetEnvironment }}-${{ parameters.Version }}-#$(Build.BuildId)"
              displayName: Define Build Version

            - powershell: |
                if (${{ parameters.FailBuild }}) {
                  throw "Failing build as requested"
                }
              displayName: Fake Deploy
